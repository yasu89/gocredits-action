name: 'Using gocredits'
author: yasu89
description: 'GitHub Action for gocredits'
branding:
  icon: 'file-text'
  color: 'blue'
inputs:
  github-token:
    description: 'The GitHub token'
    default: ${{ github.token }}
    required: false
  version:
    description: 'Version of gocredits'
    default: 'latest'
    required: false
  force-setup:
    description: 'Enable force setup'
    default: ''
    required: false
  mode:
    description: 'Mode'
    default: 'check'
    required: false
  credits_file:
    description: 'Path to the credits file'
    default: 'CREDITS'
    required: false
  path:
    description: 'Relative path under $GITHUB_WORKSPACE to execute gocredits'
    required: false
outputs:
  exitcode:
    description: 'Exit code of gocredits'
    value: |
      if [[ "$RUNNER_OS" == "Linux" || "$RUNNER_OS" == "macOS" ]]; then
        ${{ steps.check-gocredits-linux.outputs.exitcode }}
      elif [[ "$RUNNER_OS" == "Windows" ]]; then
        ${{ steps.check-gocredits-windows.outputs.exitcode }}
      fi
runs:
  using: 'composite'
  steps:
    -
      id: set-path
      shell: bash
      run: echo "path=$HOME/.gocredits/bin" >> $GITHUB_OUTPUT
    -
      shell: bash
      run: |
        mkdir -p ${{ steps.set-path.outputs.path }}
        if [[ "$RUNNER_OS" == "Linux" || "$RUNNER_OS" == "macOS" ]]; then
          echo "${{ steps.set-path.outputs.path }}" >> $GITHUB_PATH
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          echo $(cygpath -w "${{ steps.set-path.outputs.path }}") >> $GITHUB_PATH
        fi
    - name: Setup gocredits
      uses: k1LoW/gh-setup@v1
      with:
        repo: github.com/Songmu/gocredits
        github-token: ${{ inputs.github-token }}
        version: ${{ inputs.version }}
        bin-match: gocredits
        strict: true
        force: ${{ inputs.force-setup }}
        bin-dir: ${{ steps.set-path.outputs.path }}
    - name: Check gocredits on Windows
      id: check-gocredits-windows
      if: inputs.mode == 'check' && runner.os == 'Windows'
      shell: bash
      run: |
        set +e
        cd ${{ inputs.path }}
        $actual = gocredits | Out-String
        $expected = if (Test-Path '${{ inputs.credits_file }}') { Get-Content -Raw '${{ inputs.credits_file }}' } else { '' }
        if ($expected -eq $null) {
          $expected = ''
        }
        Compare-Object $actual $expected
        exitcode="$?"
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        exit "$exitcode"
    - name: Check gocredits on Linux/macOS
      id: check-gocredits-linux
      if: inputs.mode == 'check' && runner.os != 'Windows'
      shell: bash
      run: |
        set +e
        cd ${{ inputs.path }}
        diff <(gocredits) ${{ inputs.credits_file }}
        exitcode="$?"
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        exit "$exitcode"
